% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation.R
\name{hierarchicalHansenHurwitzDomainTotalCovariance}
\alias{hierarchicalHansenHurwitzDomainTotalCovariance}
\title{Hierarchical Hansen-Hurwitz domain covariance}
\usage{
hierarchicalHansenHurwitzDomainTotalCovariance(
  sample,
  domainIds,
  subCovarianceEstimator,
  domain,
  domainFraction
)
}
\arguments{
\item{sample}{\code{\link[data.table]{data.table}} with sample data}

\item{domainIds}{character() identifying the column in 'sample' that identify a partitioning of the sample into domains}

\item{subCovarianceEstimator}{\code{\link[lotteryEstimator]{ParameterizedCovarianceEstimator}} for estimating covariances for each sampled unit.}

\item{domain}{character() name of the domain to estimate for (must occur in the column 'domainIds')}

\item{domainFraction}{numeric() the fraction of the population that fall in the domain.}
}
\description{
Hierarchical estimator for estimating the covariance of domain totals using Hansen-Hurwitz estimators
}
\details{
The estimator is derived from a ratio estimator and is not unbiased.
In particular, the variation in the selection of domain members is not taken into account.
The bias is low if the number of sampled units in the domain is correlated with the sample totals for the domain.
The 'domainFraction' is assumed known. If this is obtained by estimation from sample,
the variance contribution from that estimate is not taken into account by this function.
}
\examples{
 numAtAgeSample <- function(sample){countCategorical(sample$age, 2:20)}
 numAtAgeHaul <- function(sample){hierarchicalHorvitzThompsonTotals(sample, "SSUid",
                                  numAtAgeSample, "SSUinclusionProb")}
 exampleSamples <- lotteryEstimator::NSSH2019
 exampleSamples$SSUinclusionProb <- exampleSamples$SSUselectionProb * exampleSamples$nSSU
 hhCov <- function(samples){hierarchicalHansenHurwitzCovariance(samples, "PSUid",
                                                   numAtAgeHaul, function(x){0},
                                                   "PSUselectionProb")}

 #define som arbitrary domains for the sake of the example
 exampleSamples$domains <- cut(as.numeric(exampleSamples$PSUid), 3, labels = c("one", "two", "three"))

 #obtain domain estimate
 hierarchicalHansenHurwitzDomainTotalCovariance(exampleSamples, "domains", hhCov, "two", 1/3)
}
